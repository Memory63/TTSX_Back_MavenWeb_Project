<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
                            http://www.springframework.org/schema/beans
							http://www.springframework.org/schema/beans/spring-beans.xsd
                            http://www.springframework.org/schema/context
							http://www.springframework.org/schema/context/spring-context.xsd
                            http://www.springframework.org/schema/mvc
							http://www.springframework.org/schema/mvc/spring-mvc.xsd
                            http://www.springframework.org/schema/aop
							http://www.springframework.org/schema/aop/spring-aop.xsd
                        ">

    <context:component-scan base-package="com.sdh" use-default-filters="false">
    <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
</context:component-scan>

    <mvc:annotation-driven/>

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/"></property>
        <property name="suffix" value=".jsp"></property>
    </bean>

    <mvc:default-servlet-handler/>

    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 最大可上传的文件大小   byte 超出后会抛出MaxUploadSizeExceededException异常，可以异常解析器捕获 -->
        <property name="maxUploadSize" value="2097152"></property>
    </bean>

    <!-- enable shiro's annotation-->
    <bean id="lifecycleBeanPostProcessor"
          class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
    <!-- 自动代理生成器，等价于aop:config;
         aop:config 或 AutoProxyCreator两者选其一，spring官方提醒千万不要同时使用。

    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor"/>
    -->
    <aop:config></aop:config>
    <!-- 在此bean的构建过程中，初始化了一些额外功能和piontcut
         interceptors.add(new RoleAnnotationMethodInterceptor(resolver));
         interceptors.add(new PermissionAnnotationMethodInterceptor(resolver));
         interceptors.add(new AuthenticatedAnnotationMethodInterceptor(resolver));
         interceptors.add(new UserAnnotationMethodInterceptor(resolver));
         interceptors.add(new GuestAnnotationMethodInterceptor(resolver));
    -->
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

    <bean class="com.sdh.resolver.MyExceptionResolver"></bean>
</beans>